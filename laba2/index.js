const express = require("express");
const fs = require("fs");

const app = express();

app.use(express.json());

app.listen(3000, () => {
    ¬† console.log("–°–µ—Ä–≤–µ—Ä –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ http://localhost:3000");
    });
    
// –ø–æ–ª—É—á–µ–Ω–∏–µ –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id
app.get("/api/users/:id", (req, res) => {
    ¬† const id = req.params.id; // –ø–æ–ª—É—á–∞–µ–º id
    ¬† const content = fs.readFileSync("users.json", "utf8");
    ¬† const users = JSON.parse(content);
    });
    
let user = null;

for (let i = 0; i < users.length; i++) {
    ¬† ¬† if (users[i].id == id) {
    ¬† ¬† ¬† user = users[i];
    ¬† ¬† ¬† console.log("üöÄ ~ app.get ~ user:", user);
    ¬† ¬† ¬† break;
    ¬† ¬† }
    ¬† }
        
// –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
¬† 
if (user) {
¬† ¬† res.json({ success: true, message: user });
¬† } else {
¬† ¬† res.status(404).json({ success: false, message: "" });
¬† }

// –ø–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
app.post("/api/users", (req, res) => {
    ¬† // –û–±—Ä–∞–±–æ—Ç–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –ø–æ –º–∞—Ä—à—Ä—É—Ç—É "/api/users".
    ¬† const { name, age } = req.body;
    ¬† // –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è `name` –∏ `age` –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ `req.body`.
    
    ¬† if (name == null || age == null) {
    ¬† ¬† // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω—ã –ª–∏ `name` –∏ `age`. –ï—Å–ª–∏ –æ–¥–Ω–æ –∏–∑ –Ω–∏—Ö —Ä–∞–≤–Ω–æ `null` –∏–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ:
    ¬† ¬† res.status(404).json({ success: false, message: "–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã" });
    ¬† ¬† // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å 404 —Å JSON-–æ—Ç–≤–µ—Ç–æ–º, —É–∫–∞–∑—ã–≤–∞—é—â–∏–º –Ω–∞ –æ—à–∏–±–∫—É –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ "–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã".
    ¬† }
    
    ¬† const data = fs.readFileSync("users.json", "utf8");
    ¬† // –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª "users.json" —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `data` –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
    ¬† const users = JSON.parse(data);
    ¬† // –ü–∞—Ä—Å–∏–º JSON-—Å—Ç—Ä–æ–∫—É `data` –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ `users`.
    
    ¬† let user = { name, age };
    ¬† // –°–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç `user` —Å –ø–æ–ª—è–º–∏ `name` –∏ `age`. –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å { name, age }
    
    ¬† // –Ω–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π id
    ¬† const id = Math.max.apply(
    ¬† ¬† Math,
    ¬† ¬† users.map((o) => {
    ¬† ¬† ¬† // –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ `map` –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –≤—Å–µ—Ö id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    ¬† ¬† ¬† return o.id;
    ¬† ¬† ¬† // –í–æ–∑–≤—Ä–∞—â–∞–µ–º id –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    ¬† ¬† }),
    ¬† );
    ¬† // –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ id –≤ –º–∞—Å—Å–∏–≤–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–º–æ—â—å—é `Math.max` –∏ `apply`.
    
    ¬† // —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –µ–≥–æ –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É
    ¬† user.id = id + 1;
    ¬† // –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –Ω–æ–≤–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é id, —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –Ω–∞ 1 –æ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ id –≤ –º–∞—Å—Å–∏–≤–µ.
    
    ¬† // –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤
    ¬† users.push(user);
    ¬† // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤ `users`.
    
    ¬† const newData = JSON.stringify(users);
    ¬† // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏: –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–±—Ä–∞—Ç–Ω–æ –≤ —Å—Ç—Ä–æ–∫—É JSON.
    
    ¬† // –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª —Å –Ω–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    ¬† fs.writeFileSync("users.json", newData);
    ¬† // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª "users.json". –í `newData` –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–∞, –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–∞—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ `users`.
    
    ¬† res.json({ success: true, message: user });
    ¬† // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º JSON-–æ—Ç–≤–µ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    });
    
// —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id
app.delete("/api/users/:id", (req, res) => {
    ¬† // –û–±—Ä–∞–±–æ—Ç–∫–∞ DELETE-–∑–∞–ø—Ä–æ—Å–∞ –ø–æ –º–∞—Ä—à—Ä—É—Ç—É "/api/users/:id", –≥–¥–µ `:id` ‚Äî –ø–∞—Ä–∞–º–µ—Ç—Ä, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    ¬† const id = req.params.id;
    ¬† // –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ id –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL-–∑–∞–ø—Ä–æ—Å–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `id`.
    
    ¬† if (id == null || id == "") {
    ¬† ¬† // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ id –∏ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω –ø—É—Å—Ç—ã–º.
    ¬† ¬† res.status(404).json({ success: false, message: "–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã" });
    ¬† ¬† // –ï—Å–ª–∏ id –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω –∏–ª–∏ –ø—É—Å—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å 404 —Å JSON-–æ—Ç–≤–µ—Ç–æ–º –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º "–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã".
    ¬† }
    
    ¬† const data = fs.readFileSync("users.json", "utf8");
    ¬† // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ "users.json" —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `data` –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
    ¬† const users = JSON.parse(data);
    ¬† // –ü–∞—Ä—Å–∏–º JSON-—Å—Ç—Ä–æ–∫—É `data` –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ `users`.
    
    ¬† let index = -1;
    ¬† // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `index` —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º -1 –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –æ–Ω –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω.
    
    ¬† // –Ω–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–∞—Å—Å–∏–≤–µ
    ¬† for (let i = 0; i < users.length; i++) {
    ¬† ¬† // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π `users`.
    ¬† ¬† if (users[i].id == id) {
    ¬† ¬† ¬† // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º id.
    ¬† ¬† ¬† index = i;
    ¬† ¬† ¬† // –ï—Å–ª–∏ id —Å–æ–≤–ø–∞–¥–∞–µ—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω–¥–µ–∫—Å —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `index`.
    ¬† ¬† ¬† break;
    ¬† ¬† ¬† // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª, —Ç–∞–∫ –∫–∞–∫ –Ω—É–∂–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω.
    ¬† ¬† }
    ¬† }
    
    ¬† if (index > -1) {
    ¬† ¬† // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ –Ω–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –µ—Å–ª–∏ `index` –±–æ–ª—å—à–µ -1, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω.
    ¬† ¬† // —É–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –º–∞—Å—Å–∏–≤–∞ –ø–æ –∏–Ω–¥–µ–∫—Å—É
    ¬† ¬† const user = users.splice(index, 1)[0];
    ¬† ¬† // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –º–∞—Å—Å–∏–≤–∞ `users` –ø–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É `index` –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `user`.
    
    ¬† ¬† const data = JSON.stringify(users);
    ¬† ¬† // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ `users` –æ–±—Ä–∞—Ç–Ω–æ –≤ JSON-—Å—Ç—Ä–æ–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª.
    
    ¬† ¬† fs.writeFileSync("users.json", data);
    ¬† ¬† // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª "users.json".
    
    ¬† ¬† // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ¬† ¬† res.json({ success: true, message: user });
    ¬† ¬† // –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSON-–æ—Ç–≤–µ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∏ –¥–∞–Ω–Ω—ã–º–∏ —É–¥–∞–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    ¬† } else {
    ¬† ¬† // –ï—Å–ª–∏ `index` –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è –∏ –æ—Å—Ç–∞–ª—Å—è -1, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º id –Ω–µ –Ω–∞–π–¥–µ–Ω.
    ¬† ¬† res.status(404).json({ success: false, message: "–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏" });
    ¬† ¬† // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å 404 —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º "–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏", —É–∫–∞–∑—ã–≤–∞—é—â–∏–º, —á—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å.
    ¬† }
    });
    
// –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
app.put("/api/users", (req, res) => {
    ¬† // –û–±—Ä–∞–±–æ—Ç–∫–∞ PUT-–∑–∞–ø—Ä–æ—Å–∞ –ø–æ –º–∞—Ä—à—Ä—É—Ç—É "/api/users" –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    ¬† const { name, age, id } = req.body;
    ¬† // –ò–∑–≤–ª–µ–∫–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è `name`, `age` –∏ `id` –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞.
    
    ¬† if (name == null || age == null || id == null) {
    ¬† ¬† // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω—ã –ª–∏ `name`, `age` –∏ `id`. –ï—Å–ª–∏ –æ–¥–Ω–æ –∏–∑ –Ω–∏—Ö —Ä–∞–≤–Ω–æ `null` –∏–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω–æ:
    ¬† ¬† res.status(404).json({ success: false, message: "–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã" });
    ¬† ¬† // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å 404 —Å JSON-–æ—Ç–≤–µ—Ç–æ–º –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ–º "–î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã".
    ¬† }
    
    ¬† const data = fs.readFileSync("users.json", "utf8");
    ¬† // –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ "users.json" —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `data` –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏.
    ¬† const users = JSON.parse(data);
    ¬† // –ü–∞—Ä—Å–∏–º JSON-—Å—Ç—Ä–æ–∫—É `data` –≤ –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ `users`.
    
    ¬† let user;
    ¬† // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `user`, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    ¬† for (let i = 0; i < users.length; i++) {
    ¬† ¬† // –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π `users`.
    ¬† ¬† if (users[i].id == id) {
    ¬† ¬† ¬† // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º id —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º id.
    ¬† ¬† ¬† user = users[i];
    ¬† ¬† ¬† // –ï—Å–ª–∏ id —Å–æ–≤–ø–∞–¥–∞–µ—Ç, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é `user`.
    ¬† ¬† ¬† break;
    ¬† ¬† ¬† // –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª, —Ç–∞–∫ –∫–∞–∫ –Ω—É–∂–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω.
    ¬† ¬† }
    ¬† }
    
    ¬† // –∏–∑–º–µ–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ¬† if (user) {
    ¬† ¬† // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–π–¥–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –µ—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è `user` –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞, –∑–Ω–∞—á–∏—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω.
    ¬† ¬† user.age = age;
    ¬† ¬† // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ `age` —É –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    ¬† ¬† user.name = name;
    ¬† ¬† // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ `name` —É –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    
    ¬† ¬† const newData = JSON.stringify(users);
    ¬† ¬† // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ `users` –æ–±—Ä–∞—Ç–Ω–æ –≤ JSON-—Å—Ç—Ä–æ–∫—É –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ —Ñ–∞–π–ª.
    
    ¬† ¬† fs.writeFileSync("users.json", newData);
    ¬† ¬† // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ñ–∞–π–ª "users.json".
    
    ¬† ¬† res.json({ success: true, message: user });
    ¬† ¬† // –í–æ–∑–≤—Ä–∞—â–∞–µ–º JSON-–æ—Ç–≤–µ—Ç —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –¥–∞–Ω–Ω—ã–º–∏ –æ–±–Ω–æ–≤–ª—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    ¬† } else {
    ¬† ¬† // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º id –Ω–µ –Ω–∞–π–¥–µ–Ω (–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è `user` –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∞):
    ¬† ¬† res.status(404).json({ success: false, message: "–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏" });
    ¬† ¬† // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞—Ç—É—Å 404 —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º "–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏", —É–∫–∞–∑—ã–≤–∞—é—â–∏–º, —á—Ç–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å.
    ¬† }
    });
    